
package Views;

import java.util.ArrayList;
import Models.Lecturer;
import ServiceLayer.LecturerViewService;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ViewLecturerDetailsUI extends javax.swing.JFrame {

ResultSet rs;
LecturerViewService t;
    /**
     * Creates new form ViewLecturerDetailsUI
     */
    public ViewLecturerDetailsUI() {
        initComponents();
        showlecturer();
    }
    public ArrayList<Lecturer> Lecture_hallList(){
    ArrayList<Lecturer> LecturerList= new ArrayList<>();
         try {
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             String URL =  "jdbc:sqlserver://DESKTOP-9F7781K:1433;databaseName=Saint_Project;user=sa;password=123";
             Connection conn;  
             conn = DriverManager.getConnection(URL);
             String query="select * from lecturer ";
             Statement st = conn.createStatement();
             rs =st.executeQuery(query);
             Lecturer lh;
             while(rs.next())
             {
             
                 lh=new Lecturer(rs.getString("Name"), rs.getString("Pno"), rs.getInt("age"),rs.getString("Gender"),rs.getString("LID"),rs.getString("Position"),rs.getString("Qualification"),rs.getString("emailID"),rs.getString("Subject"));
             
                  LecturerList.add(lh);
             }
             
             
    
    }   catch (SQLException ex) {
            Logger.getLogger(HallViewUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HallViewUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    return LecturerList;
    }
    
        public void showlecturer(){
        ArrayList<Lecturer> list =Lecture_hallList();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        Object[] row= new Object[9];
        for(int i=0;i<list.size();i++){
            row[0]=list.get(i).name;
            row[1]=list.get(i).phoneNo;
            row[2]=list.get(i).Gender;
            row[3]=list.get(i).age;
            row[4]=list.get(i).LID;
            row[5]=list.get(i).Position;
            row[6]=list.get(i).Qualiﬁcation;
            row[7]=list.get(i).emailID;
            row[8]=list.get(i).Subject;

            model.addRow(row);
        
        }
    
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtLID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("LID");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Phone No", "Age", "Gender", "LID", "Position", "Qualification", "EmailID", "Subject"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(txtLID, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(128, 128, 128)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtLID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(80, 80, 80))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

try {
            Lecturer l = new Lecturer(txtLID.getText());
            ArrayList<Lecturer> list=t.SearchLecturer(l);
        
        
      list.add(l);
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        Object[] row= new Object[3];
        for(int i=0;i<list.size();i++){
             row[0]=list.get(i).name;
            row[1]=list.get(i).phoneNo;
            row[2]=list.get(i).Gender;
            row[3]=list.get(i).age;
            row[4]=list.get(i).LID;
            row[5]=list.get(i).Position;
            row[6]=list.get(i).Qualiﬁcation;
            row[7]=list.get(i).emailID;
            row[8]=list.get(i).Subject;
            model.addRow(row);
        
        }
     }catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Empty Value or error input", "Info", 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewLecturerDetailsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewLecturerDetailsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewLecturerDetailsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewLecturerDetailsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewLecturerDetailsUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtLID;
    // End of variables declaration//GEN-END:variables
}
